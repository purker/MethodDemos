<Publication>
  <id>TUW-194085</id>
  <title>Erklärung</title>
  <keywords/>
  <authors>
    <Author>
      <name>Thomas Nowak</name>
      <firstNames/>
      <affiliations/>
    </Author>
    <Author>
      <name>an der</name>
      <firstNames/>
      <affiliations/>
    </Author>
    <Author>
      <name>Thomas Nowak</name>
      <firstNames/>
      <affiliations/>
    </Author>
  </authors>
  <affiliations/>
  <sections>
    <Section>
      <title>
DIPLOMARBEIT
</title>
      <type>abstract</type>
      <typeEnum>ABSTRACT</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
Abstract
</title>
      <type>keywords</type>
      <typeEnum>KEYWORDS</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
Kurzfassung
</title>
      <type>introduction</type>
      <typeEnum>INTRODUCTION</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
1. Introduction
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
2. Distributed Computing Models
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
2.1. Introduction
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
2 Distributed Computing Models 2.2 Asynchronous Message Passing ä la FLP
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
2 Distributed Computing Models 2.3 Omission Failure Model
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
2 Distributed Computing Models 2.3 Omission Failure Model
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
2 Distributed Computing Models 2.5 Safety and Liveness
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
2 Distributed Computing Models 2.5 Safety and Liveness
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
3. Problem Specifications
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
4. Point-Set Topology
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
4 Point-Set Topology 4.2 Topological Impossibility
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
4 Point-Set Topology 4.3 Impossibility Results
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
4 Point-Set Topology 4.3 Impossibility Results
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
5. Algebraic Topology
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
6. Summary
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
A. Topological Prerequisites
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
A.2. Topologies
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
A.2.2. Closure, Interior, Boundary, Density
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
closed. ■
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>
Bibliography
</title>
      <type>method</type>
      <typeEnum>METHOD</typeEnum>
      <referenceIds/>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references>
    <Reference>
      <id>ref1</id>
      <marker>Alpern, Schneider, 1985</marker>
      <title>Defining liveness.</title>
      <authors>
        <ReferenceAuthor>
          <name>Bowen Alpern</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Fred B Schneider</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <publicationYear>1985</publicationYear>
      <referenceText>ref1,Alpern, Schneider, 1985,Defining liveness.,Bowen Alpern,Fred B Schneider,1985</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref2</id>
      <marker>Attiya, Welch, 2004</marker>
      <title>Distributed Computing: Fundamentals, Simulations, and Advanced Topics.</title>
      <publisher>John Wiley &amp; Sons,</publisher>
      <authors>
        <ReferenceAuthor>
          <name>Hagit Attiya</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Jennifer Welch</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <note>second edition,</note>
      <publicationYear>2004</publicationYear>
      <referenceText>ref2,Attiya, Welch, 2004,Distributed Computing: Fundamentals, Simulations, and Advanced Topics.,John Wiley &amp; Sons,,Hagit Attiya,Jennifer Welch,second edition,,2004</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref3</id>
      <marker>Bourbaki, 1989</marker>
      <title>General Topology, Chapters 1–4. Elements of Mathematics.</title>
      <publisher>Springer,</publisher>
      <authors>
        <ReferenceAuthor>
          <name>Nicolas Bourbaki</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <publicationYear>1989</publicationYear>
      <referenceText>ref3,Bourbaki, 1989,General Topology, Chapters 1–4. Elements of Mathematics.,Springer,,Nicolas Bourbaki,1989</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref4</id>
      <marker>Charron-Bost, Toueg, Basu, 2000</marker>
      <title>Revisiting safety and liveness in the context of failures.</title>
      <source>In Proceedings of CONCUR 2000—Concurrency Theory,</source>
      <publisher>Springer,</publisher>
      <authors>
        <ReferenceAuthor>
          <name>Bernadette Charron-Bost</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Sam Toueg</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Anindya Basu</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <publicationYear>2000</publicationYear>
      <referenceText>ref4,Charron-Bost, Toueg, Basu, 2000,Revisiting safety and liveness in the context of failures.,In Proceedings of CONCUR 2000—Concurrency Theory,,Springer,,Bernadette Charron-Bost,Sam Toueg,Anindya Basu,2000</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref5</id>
      <marker>Dolev, Dwork, Stockmeyer, 1987</marker>
      <title>On the minimal synchronism needed for distributed consensus.</title>
      <authors>
        <ReferenceAuthor>
          <name>Danny Dolev</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Cynthia Dwork</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Larry Stockmeyer</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <volume>34</volume>
      <issue>1</issue>
      <publicationYear>1987</publicationYear>
      <referenceText>ref5,Dolev, Dwork, Stockmeyer, 1987,On the minimal synchronism needed for distributed consensus.,Danny Dolev,Cynthia Dwork,Larry Stockmeyer,34,1,1987</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref6</id>
      <marker>Fich, Ruppert, 2003</marker>
      <title>Hundreds of impossibility results for distributed computing.</title>
      <authors>
        <ReferenceAuthor>
          <name>Faith Fich</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Eric Ruppert</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <volume>16</volume>
      <issue>2</issue>
      <publicationYear>2003</publicationYear>
      <referenceText>ref6,Fich, Ruppert, 2003,Hundreds of impossibility results for distributed computing.,Faith Fich,Eric Ruppert,16,2,2003</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref7</id>
      <marker>Fischer, Lynch, Paterson, 1985</marker>
      <title>Impossibility of distributed consensus with one faulty process.</title>
      <authors>
        <ReferenceAuthor>
          <name>Michael J Fischer</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Nancy A Lynch</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Michael S Paterson</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <volume>32</volume>
      <issue>2</issue>
      <publicationYear>1985</publicationYear>
      <referenceText>ref7,Fischer, Lynch, Paterson, 1985,Impossibility of distributed consensus with one faulty process.,Michael J Fischer,Nancy A Lynch,Michael S Paterson,32,2,1985</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref8</id>
      <marker>Hatcher, 2002</marker>
      <title>Algebraic Topology.</title>
      <publisher>Cambridge University Press,</publisher>
      <authors>
        <ReferenceAuthor>
          <name>Allan Hatcher</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <publicationYear>2002</publicationYear>
      <referenceText>ref8,Hatcher, 2002,Algebraic Topology.,Cambridge University Press,,Allan Hatcher,2002</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref9</id>
      <marker>Herlihy, Rajsbaum, 2000</marker>
      <title>Algebraic spans.</title>
      <authors>
        <ReferenceAuthor>
          <name>Maurice Herlihy</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Sergio Rajsbaum</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <volume>10</volume>
      <issue>4</issue>
      <publicationYear>2000</publicationYear>
      <referenceText>ref9,Herlihy, Rajsbaum, 2000,Algebraic spans.,Maurice Herlihy,Sergio Rajsbaum,10,4,2000</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref10</id>
      <marker>Herlihy, Shavit, 1993</marker>
      <title>The asynchronous computability theorem for tresilient tasks.</title>
      <source>In Proceedings of the 25th Annual ACM Symposium on Theory of Computing,</source>
      <authors>
        <ReferenceAuthor>
          <name>Maurice Herlihy</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Nir Shavit</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <publicationYear>1993</publicationYear>
      <referenceText>ref10,Herlihy, Shavit, 1993,The asynchronous computability theorem for tresilient tasks.,In Proceedings of the 25th Annual ACM Symposium on Theory of Computing,,Maurice Herlihy,Nir Shavit,1993</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref11</id>
      <marker>Herrlich, Strecker, 1973</marker>
      <title>Category Theory: An Introduction. Allyn and Bacon,</title>
      <authors>
        <ReferenceAuthor>
          <name>Horst Herrlich</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>George E Strecker</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <publicationYear>1973</publicationYear>
      <referenceText>ref11,Herrlich, Strecker, 1973,Category Theory: An Introduction. Allyn and Bacon,,Horst Herrlich,George E Strecker,1973</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref12</id>
      <marker>Lamport, 1977</marker>
      <title>Proving the correctness of multiprocess programs.</title>
      <authors>
        <ReferenceAuthor>
          <name>Leslie Lamport</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <volume>3</volume>
      <issue>2</issue>
      <publicationYear>1977</publicationYear>
      <referenceText>ref12,Lamport, 1977,Proving the correctness of multiprocess programs.,Leslie Lamport,3,2,1977</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref13</id>
      <marker>Lubitch, Moran, 1995</marker>
      <title>Closed schedulers: A novel technique for analyzing asynchronous protocols.</title>
      <authors>
        <ReferenceAuthor>
          <name>Ronit Lubitch</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Shlomo Moran</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <volume>8</volume>
      <issue>4</issue>
      <publicationYear>1995</publicationYear>
      <referenceText>ref13,Lubitch, Moran, 1995,Closed schedulers: A novel technique for analyzing asynchronous protocols.,Ronit Lubitch,Shlomo Moran,8,4,1995</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref14</id>
      <marker>Lynch, 1996</marker>
      <title>Distributed Algorithms.</title>
      <publisher>Morgan Kaufmann,</publisher>
      <authors>
        <ReferenceAuthor>
          <name>Nancy A Lynch</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <note>Bibliography Bibliography</note>
      <publicationYear>1996</publicationYear>
      <referenceText>ref14,Lynch, 1996,Distributed Algorithms.,Morgan Kaufmann,,Nancy A Lynch,Bibliography Bibliography,1996</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref15</id>
      <marker>Moses, Rajsbaum, 2002</marker>
      <title>A layered analysis of consensus.</title>
      <authors>
        <ReferenceAuthor>
          <name>Yoram Moses</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Sergio Rajsbaum</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <volume>31</volume>
      <issue>4</issue>
      <publicationYear>2002</publicationYear>
      <referenceText>ref15,Moses, Rajsbaum, 2002,A layered analysis of consensus.,Yoram Moses,Sergio Rajsbaum,31,4,2002</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref16</id>
      <marker>Saks, Zaharoglou, 2000</marker>
      <title>Wait-free k-set agreement is impossible: The topology of public knowledge.</title>
      <authors>
        <ReferenceAuthor>
          <name>Michael Saks</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Fotios Zaharoglou</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <volume>29</volume>
      <issue>5</issue>
      <publicationYear>2000</publicationYear>
      <referenceText>ref16,Saks, Zaharoglou, 2000,Wait-free k-set agreement is impossible: The topology of public knowledge.,Michael Saks,Fotios Zaharoglou,29,5,2000</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref17</id>
      <marker>Santoro, Widmayer, 1989</marker>
      <title>Time is not a healer.</title>
      <source>In Proceedings of the 6th Annual Symposium on Theoretical Aspects of Computer Science,</source>
      <publisher>Springer,</publisher>
      <authors>
        <ReferenceAuthor>
          <name>Nicola Santoro</name>
          <firstNames/>
        </ReferenceAuthor>
        <ReferenceAuthor>
          <name>Peter Widmayer</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <publicationYear>1989</publicationYear>
      <referenceText>ref17,Santoro, Widmayer, 1989,Time is not a healer.,In Proceedings of the 6th Annual Symposium on Theoretical Aspects of Computer Science,,Springer,,Nicola Santoro,Peter Widmayer,1989</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
    <Reference>
      <id>ref18</id>
      <marker>Spanier, 1966</marker>
      <title>Algebraic Topology.</title>
      <publisher>McGraw-Hill,</publisher>
      <authors>
        <ReferenceAuthor>
          <name>Edwin H Spanier</name>
          <firstNames/>
        </ReferenceAuthor>
      </authors>
      <publicationYear>1966</publicationYear>
      <referenceText>ref18,Spanier, 1966,Algebraic Topology.,McGraw-Hill,,Edwin H Spanier,1966</referenceText>
      <publication reference="/Publication[1]"/>
    </Reference>
  </references>
</Publication>