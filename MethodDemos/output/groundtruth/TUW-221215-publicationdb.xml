<Publication>
  <authors>
    <Author>
      <firstname>Claus-Dieter</firstname>
      <lastname>Volko</lastname>
    </Author>
  </authors>
  <id>TUW-221215</id>
  <title>Selective Graph Coloring Problem</title>
  <abstractEnglish>
			The Selective Graph Coloring Problem (SGCP) is about finding a subgraph of a particular structure&lt;br&gt; whose chromatic number is as low as possible. The original graph is divided into several clusters, and&lt;br&gt; from each cluster the subgraph has to contain exactly one node. This problem is NP-hard and&lt;br&gt; therefore it is usually solved by means of heuristics.&lt;br&gt; I implemented several variants of an algorithm making use of Variable Neighborhood Search (VNS) to&lt;br&gt; search the space of solution candidates and then evaluating the solution using heuristic or exact&lt;br&gt; methods. Furthermore, each variant can be used with or without a solution archive, i.e. a data&lt;br&gt; structure in which previously found solutions are stored so that duplicates need not be re-evaluated&lt;br&gt; but can be efficiently converted into new solutions instead. For exact computation of the chromatic&lt;br&gt; number integer linear programming was used. To obtain an upper bound a variant of greedy coloring&lt;br&gt; was used. Another variant of the algorithm also counts the number of conflicts that would appear if&lt;br&gt; one color less were used. Finally, two methods were implemented to obtain a lower bound:&lt;br&gt; maximum clique and linear programming using column generation.&lt;br&gt; The program was tested with various instances from the literature. My algorithm often finished&lt;br&gt; computation within a very short time, but in general it led to slightly worse results.
		</abstractEnglish>
  <abstractGerman>
			Beim Selective Graph Coloring Problem (SGCP) geht es darum, einen Teilgraphen mit spezieller&lt;br&gt; Struktur zu finden, dessen chromatische Zahl so niedrig wie m?glich ist. Der Ursprungsgraph ist in&lt;br&gt; mehrere Cluster unterteilt, und von jedem Cluster muss der Teilgraph genau einen Knoten enthalten.&lt;br&gt; Dieses Problem ist NP-schwer und wird daher meistens mit Heuristiken gel?st.&lt;br&gt; Ich habe mehrere Varianten eines Algorithmus implementiert, der Variable Neighborhood Search&lt;br&gt; (VNS) benutzt, um den L?sungsraum zu durchsuchen, und dann die gefundene L?sung mit&lt;br&gt; heuristischen oder exakten Methoden evaluiert. Jede Variante kann mit oder ohne ein L?sungsarchiv&lt;br&gt; verwendet werden. Ein L?sungsarchiv ist eine Datenstruktur, in der bereits gefundene L?sungen&lt;br&gt; gespeichert werden, so dass Duplikate nicht neu evaluiert werden m?ssen, sondern effizient zu&lt;br&gt; neuen L?sungen konvertiert werden k?nnen. Um eine obere Schranke zu errechnen, wurde eine&lt;br&gt; Variante von Greedy Coloring verwendet. Eine weitere Variante des Algorithmus z?hlt auch die&lt;br&gt; Anzahl der Konflikte, die entst?nden, w?rde eine Farbe weniger verwendet werden. Schlie?lich&lt;br&gt; wurden zwei Methoden umgesetzt, um eine untere Schranke zu berechnen: maximale Clique und&lt;br&gt; lineare Programmierung mit Spaltengenerierung.&lt;br&gt; Das Programm wurde mit verschiedenen Instanzen aus der Literatur getestet. Mein Algorithmus&lt;br&gt; beendete die Berechnungen oft schon nach sehr kurzer Laufzeit, f?hrte aber im Allgemeinen zu&lt;br&gt; geringf?gig schlechteren Ergebnissen.
		</abstractGerman>
  <linkPdf>http://publik.tuwien.ac.at/files/PubDat_221215.pdf</linkPdf>
  <institute>Institut f?r Computergraphik and Algorithmen</institute>
</Publication>