<Publication>
  <authors>
    <Author>
      <firstName>Jens</firstName>
      <lastName>Knoop</lastName>
    </Author>
    <Author>
      <firstName>Laura</firstName>
      <lastName>Kovacs</lastName>
    </Author>
    <Author>
      <firstName>Jakob</firstName>
      <lastName>Zwirchmayr</lastName>
    </Author>
  </authors>
  <id>TUW-205557</id>
  <title>An Evaluation of WCET Analysis using Symbolic Loop Bounds (extended Abstract)</title>
  <abstractText>
			Extended Abstract. The spread of safety critical real time systems results in an in-&lt;br&gt; creased necessity for worst case execution time (WCET) analysis of these systems:&lt;br&gt; finding the time limit within which the software system responds in all possible sce-&lt;br&gt; narios. Computing the WCET for programs with loops or recursion is, in general, un-&lt;br&gt; decidable. We present an automatic method for computing tight upper bounds on the&lt;br&gt; iteration number of special classes of program loops. These upper bounds are further&lt;br&gt; used in the WCET analysis of programs. The technique deploys pattern-based recur-&lt;br&gt; rence solving in conjunction with program flow refinement using SMT reasoning. To&lt;br&gt; do so, we refine program flows using SMT reasoning and rewrite certain multi-path&lt;br&gt; loops into single-path ones, possibly over-approximating the loop-bound. The multi-&lt;br&gt; path loops we consider are I) abruptly-terminating loops that might terminate early due&lt;br&gt; to break statements and II) loops with additional monotonic updates, that condition-&lt;br&gt; ally modify the loop counter. For those, the minimum increase of the loop counter is&lt;br&gt; computed and used as loop step expression. Single-path loops are further translated into&lt;br&gt; a set of recurrence relations over program variables. For solving recurrences we deploy&lt;br&gt; a pattern-based recurrence solving algorithm, computing closed forms for a restricted&lt;br&gt; class of recurrence equations. Finally, iteration bounds are derived for program loops&lt;br&gt; from the computed closed forms. We only compute closed forms for a restricted class&lt;br&gt; of loops, however, in practice, these recurrences describe the behavior of a large set of&lt;br&gt; program loops that are relevant to WCET analysis. Our technique is implemented in&lt;br&gt; the r-TuBound tool and was successfully tried out on a number of challenging WCET&lt;br&gt; benchmarks: we evaluate the symbolic loop bound generation technique and present an&lt;br&gt; experimental evaluation of the method carried out with the r-TuBound software tool.&lt;br&gt; We evaluate our method against various academic and industrial WCET benchmarks,&lt;br&gt; and compare the results to the original TuBound tool.
		</abstractText>
  <linkPdf>http://publik.tuwien.ac.at/files/PubDat_205557.pdf</linkPdf>
</Publication>