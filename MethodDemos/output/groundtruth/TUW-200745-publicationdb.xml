<Publication>
  <authors>
    <Author>
      <firstname>Christian</firstname>
      <lastname>Gruber</lastname>
    </Author>
  </authors>
  <pubId>TUW-200745</pubId>
  <title>Ein Lösungsarchiv mit Branch-and-Bound-Erweiterung für das Generalized Minimum Spanning Tree Problem</title>
  <abstractEnglish>
			In this work, an algorithm for the generalized minimum spanning tree problem&lt;br&gt; (GMST) is developed. Given is a complete graph where the nodes are partitioned&lt;br&gt; into clusters. A solution is a spanning tree which contains exactly one node of&lt;br&gt; each cluster and its costs are minimal. This problem is NP-hard. In this work, a&lt;br&gt; heuristic is developed for this problem.&lt;br&gt; In this method, an evolutionary algorithm (EA) is used with two different solution&lt;br&gt; archives. Using a solution archive, it is possible to store solutions generated&lt;br&gt; by the EA in order to detect duplicates and converts duplicate solutions into new&lt;br&gt; solutions. One solution archive based on an encoding in which the spanned nodes&lt;br&gt; of each cluster in the solution are stored. The other archive is based on an encoding&lt;br&gt; which characterizes the connections between the clusters.&lt;br&gt; These archives are extended by a bounding strategy based on the branch-and-bound&lt;br&gt; technique. They try to calculate appropriate bounds at a convenient positions which&lt;br&gt; give information about how good the solutions in the respective area of the archive&lt;br&gt; can be in the best case. If a bound was found which is worse than the best known&lt;br&gt; solution, the solutions are unattractive in the course of the algorithm and will not&lt;br&gt; be considered. Therefore inferior solutions can be detected at an early stage and&lt;br&gt; only promising solutions that can bring improvements will be pursued.&lt;br&gt; In addition to the bounding strategy a nearest neighbor approach is implemented in&lt;br&gt; which a cluster attached to the spanning tree is preferred among the the n nearest&lt;br&gt; neighboring clusters.&lt;br&gt; Tests were carried out in which the bounding strategy was used in the different&lt;br&gt; variants. These tests led to the conclusion that the bounding strategy leads to an&lt;br&gt; improvement in comparison to the &quot;normal&quot; archives. The comparison between&lt;br&gt; the archives shows that the pop version lead to better results than the gosh version.&lt;br&gt; When both archives are used simultaneously, the results are better than the results&lt;br&gt; of the other two variants.&lt;br&gt; iv
		</abstractEnglish>
  <abstractGerman>
			In dieser Arbeit wird ein Algorithmus fu&amp;#776;r das Generalized Minimum Spanning&lt;br&gt; Tree-Problem (GMST) entwickelt. Beim GMST-Problem ist ein vollständiger&lt;br&gt; Graph gegeben, bei dem die Knoten in Cluster partitioniert sind. Als Lösung wird&lt;br&gt; ein Spannbaum gesucht, der von jedem Cluster genau einen Knoten beinhaltet und&lt;br&gt; dessen Kosten minimal sind. Dieses Problem ist NP-schwierig. In dieser Arbeit&lt;br&gt; wird eine Heuristik fu&amp;#776;r dieses Problem entwickelt.&lt;br&gt; Bei diesem Verfahren wird ein Evolutionärer Algorithmus (EA) mit zwei verschiedenen&lt;br&gt; Lösungsarchiven verwendet. Die Lösungsarchive werden dazu benutzt&lt;br&gt; Lösungen zu speichern, um Duplikate zu erkennen und diese in neue Lösungen&lt;br&gt; umzuwandeln. Das eine Lösungsarchiv beruht auf einer Kodierung, bei der die&lt;br&gt; ausgewählten Knoten der Cluster einer Lösung gespeichert werden, während das&lt;br&gt; andere Archiv auf einer Kodierung beruht, bei der gespeichert wird, welche Cluster&lt;br&gt; in der Lösung verbunden sind.&lt;br&gt; Diese Archive werden in dieser Arbeit durch eine Bounding-Strategie basierend&lt;br&gt; auf dem Branch and Bound Verfahren erweitert. Dabei wird versucht im Archiv an&lt;br&gt; gu&amp;#776;nstigen Positionen geeignete Bounds zu berechnen, die Auskunft daru&amp;#776;ber geben,&lt;br&gt; wie gut die Lösungen in diesem Bereich des Archivs höchstens sein können. Wird&lt;br&gt; eine Bound gefunden, die schlechter als die beste gefunden Lösung ist, sind diese&lt;br&gt; Lösungen im weiteren Verlauf des Algorithmus uninteressant und werden nicht&lt;br&gt; mehr beru&amp;#776;cksichtigt. Das fu&amp;#776;hrt dazu, dass mehrere Lösungen von vornherein als&lt;br&gt; schlecht erkannt werden können und somit nur Lösungen verfolgt werden, die auch&lt;br&gt; Verbesserungen bringen können.&lt;br&gt; Zusätzlich zu der Bounding-Strategie wird auch noch ein Nearest Neighbour Ansatz&lt;br&gt; verwendet, bei dem beim Anhängen eines Clusters an den Spannbaum die n nächsten&lt;br&gt; Nachbarcluster bevorzugt werden.&lt;br&gt; Am Ende der Arbeit wurden Tests durchgefu&amp;#776;hrt, bei denen die Bounding Strategie&lt;br&gt; in den unterschiedlichen Archiven verwendet wurde. Diese Tests fu&amp;#776;hrten zu&lt;br&gt; dem Ergebnis, dass die Bounding Strategie zu einer Verbesserung gegenu&amp;#776;ber den&lt;br&gt; Archiven ohne Bounding Strategie fu&amp;#776;hrt. Der Vergleich zwischen den Archiven hat&lt;br&gt; ergeben, dass die Pop-Variante bessere Ergebnisse liefert als die Gosh-Variante.&lt;br&gt; Die Variante, in der beide Archive gleichzeitig verwendet werden, ist wiederum&lt;br&gt; besser als die anderen beiden Varianten.
		</abstractGerman>
  <linkPdf>http://publik.tuwien.ac.at/files/PubDat_200745.pdf</linkPdf>
  <institute>Institut für Computergraphik und Algorithmen</institute>
</Publication>