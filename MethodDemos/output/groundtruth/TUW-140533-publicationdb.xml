<Publication>
  <authors>
    <Author>
      <firstname>Ingo</firstname>
      <lastname>Feinerer</lastname>
    </Author>
  </authors>
  <id>TUW-140533</id>
  <title>Formal Program Verification: A Comparison of Selected Tools and Their Theoretical Foundations</title>
  <abstractEnglish>
			Formal specification and verification of software have made small but continuous advances throughout its long history, and have reached a point where commercial tools became available for verifying programs semi-automatically or automatically.&lt;br&gt; &lt;br&gt; The aim of the master thesis is to evaluate commercial and academic verification tools with respect to their usability in developing software and in teaching formal methods. The thesis will explain the theoretical foundation and compare the capabilities and characteristics of selected commercial and academic tools on concrete examples.&lt;br&gt; &lt;br&gt; The theoretical foundations deal on the one hand with the general ideas and principles of formal software verification, on the other hand present some internals of the selected tools to give a comprehensive understanding.&lt;br&gt; &lt;br&gt; The discussed tools are the Frege Program Prover, KeY, Perfect Developer, and the Prototype Verification System. The examples encompass simple standard computer science problems. The evaluation of these tools concentrates on the whole development process of specification and verification, not just on the verification results.
		</abstractEnglish>
  <abstractGerman>
			Formale Spezifikation und Verifikation sind durch die durch kontinuierliche Weiterentwicklung in letzter Zeit an einem Punkt angelangt, wo Programme beinahe automatisch verifiziert werden k?nnen.&lt;br&gt; &lt;br&gt; Das Ziel dieser Magisterarbeit ist es, sowohl kommerzielle als auch f?r wissenschaftliche Zwecke entwickelte Verifikationsprogramme zu testen. Der Hauptaugenmerk liegt auf dem Nutzen dieser Werkzeuge in der Software-Entwicklung und in der Lehre. Hierzu wird diese Magisterarbeit die theoretischen Grundlagen vorstellen und auf die verschiedenen F?higkeiten und Eigenheiten der ausgew?hlten Werkzeuge eingehen.&lt;br&gt; &lt;br&gt; Die theoretischen Grundlagen behandeln einerseits Ans?tze, die f?r die formale Verifikation gebraucht werden, andererseits wird die Funktionsweise der ausgew?hlten Werkzeuge erkl?rt.&lt;br&gt; &lt;br&gt; Die begutachteten Programme sind der Frege Program Prover, KeY, Perfect Developer und das Prototype Verification System. Die Beispiele, mit denen diese Werkzeuge getestet werden, sind typische Problemstellung der Informatik. Bei der Evaluation wird auf den ganzen Ablauf beim Einsatz dieser Werkzeuge eingegangen und nicht nur auf das Endergebnis.
		</abstractGerman>
  <linkPdf>http://publik.tuwien.ac.at/files/pub-inf_4115.pdf</linkPdf>
  <institute>E 185 Institut f?r Computersprachen</institute>
</Publication>